{"ast":null,"code":"var _jsxFileName = \"/Users/jackson/turing/projects/trivia-app/web/src/components/NewGameForm/NewGameForm.js\";\nimport './NewGameForm.scss';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class NewGameForm extends React.Component {\n  constructor() {\n    super();\n\n    this.categoryOptions = () => {\n      return this.props.categories.map((category, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 14\n        }, this);\n      });\n    };\n\n    this.handleChange = e => {\n      if (e.target.name !== 'type') {\n        this.setState({ ...this.state,\n          [e.target.name]: e.target.value.toLowerCase()\n        });\n      } else this.setState({ ...this.state,\n        [e.target.name]: e.target.id\n      });\n    };\n\n    this.fetchTriviaSet = () => {\n      let fetchUrl = '';\n      Object.keys(this.state).forEach((prop, index) => {\n        if (this.state[prop] !== '' && index !== 0 && prop !== 'room') {\n          fetchUrl += `&${prop + '=' + this.state[prop]}`;\n        } else if (this.state[prop] !== '' && index === 0 && prop !== 'room') {\n          fetchUrl = `${prop + '=' + this.state[prop]}`;\n        } else if (prop === 'room') {\n          socket.connect(\"http://localhost:4000\");\n          socket.emit('create game', this.state[prop]);\n        }\n      });\n      this.props.generateSlideDeck(fetchUrl);\n    };\n\n    this.state = {\n      difficulty: '',\n      category: '',\n      amount: 10,\n      type: '',\n      room: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"new-game\",\n      onChange: e => this.handleChange(e),\n      children: [\"New Game\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"difficulty\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Easy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Hard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"category\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), this.categoryOptions()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"amount\",\n        placeholder: \"Number of Slides\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"type\",\n          id: \"boolean\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"boolean\",\n          children: \"True / False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"type\",\n          id: \"multiple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"multiple\",\n          children: \"Multiple Choice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"room\",\n        placeholder: \"Room Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/play\",\n        onClick: () => this.fetchTriviaSet(),\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jackson/turing/projects/trivia-app/web/src/components/NewGameForm/NewGameForm.js"],"names":["React","Link","io","NewGameForm","Component","constructor","categoryOptions","props","categories","map","category","index","id","name","handleChange","e","target","setState","state","value","toLowerCase","fetchTriviaSet","fetchUrl","Object","keys","forEach","prop","socket","connect","emit","generateSlideDeck","difficulty","amount","type","room","render"],"mappings":"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","sourcesContent":["import './NewGameForm.scss'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport io from \"socket.io-client\"\n\nexport class NewGameForm extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      difficulty: '',\n      category: '',\n      amount: 10,\n      type: '',\n      room: '',\n    }\n  }\n\n  categoryOptions = () => {\n    return this.props.categories.map((category, index) => {\n      return <option key={index} value={category.id}>{category.name}</option>\n    })\n  }\n\n  handleChange = (e) => {\n    if (e.target.name !== 'type') {\n      this.setState({...this.state, [e.target.name]: e.target.value.toLowerCase()})\n    } else this.setState({...this.state, [e.target.name]: e.target.id})\n  } \n\n  fetchTriviaSet = () => {\n    let fetchUrl = '';\n    Object.keys(this.state).forEach((prop, index) => {\n      if (this.state[prop] !== '' && index !== 0 && prop !== 'room') {\n        fetchUrl += `&${prop + '=' + this.state[prop]}`\n      }\n      else if (this.state[prop] !== '' && index === 0 && prop !== 'room') {\n        fetchUrl = `${prop + '=' + this.state[prop]}`\n      } else if (prop === 'room') {\n        socket.connect(\"http://localhost:4000\")\n        socket.emit('create game', this.state[prop])\n      }\n    })\n    this.props.generateSlideDeck(fetchUrl)\n  }\n\n\n  render () {\n    return (\n    <form className=\"new-game\"\n    onChange={(e) => this.handleChange(e)}>New Game\n      <select name=\"difficulty\">\n        <option>Difficulty</option>\n        <option>Easy</option>\n        <option>Medium</option>\n        <option>Hard</option>\n      </select>\n      <select name=\"category\">\n        <option>Category</option>\n        {this.categoryOptions()}\n      </select>\n      <input type=\"number\" name=\"amount\" placeholder=\"Number of Slides\" required/>\n      <div>\n      <input type=\"radio\" name=\"type\" id=\"boolean\"/>\n      <label htmlFor=\"boolean\">True / False</label>\n      <input type=\"radio\" name=\"type\" id=\"multiple\"/>\n      <label htmlFor=\"multiple\">Multiple Choice</label>\n      </div>\n      <input name=\"room\" placeholder=\"Room Name\"/>\n      <Link to=\"/play\" onClick={() => this.fetchTriviaSet()}>\n      <button>Start</button>\n      </Link>\n    </form>\n  )\n  }\n}"]},"metadata":{},"sourceType":"module"}