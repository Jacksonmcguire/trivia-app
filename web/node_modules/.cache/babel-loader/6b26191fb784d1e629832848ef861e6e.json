{"ast":null,"code":"var _jsxFileName = \"/Users/jackson/turing/projects/trivia-app/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './Chat.scss';\nimport { TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:4000');\nexport const Chat = () => {\n  _s();\n\n  const [state, setState] = useState({\n    message: '',\n    name: ''\n  });\n  const [chat, setChat] = useState([]);\n  useEffect(() => {\n    socket.on('message', ({\n      name,\n      message\n    }) => {\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n  });\n\n  const onTextChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onMessageSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      message\n    } = state;\n    console.log(name, message);\n    setChat([...chat, {\n      name,\n      message\n    }]);\n    socket.emit('message', {\n      name,\n      message\n    });\n    setState({\n      message: '',\n      name\n    });\n  };\n\n  const renderChat = () => {\n    console.log(chat);\n    return chat.map(({\n      name,\n      message\n    }, index) => {\n      socket.emit('message', {\n        name,\n        message\n      });\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [name, \": \", message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onMessageSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-field\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"name\",\n          onChange: e => onTextChange(e),\n          value: state.name,\n          label: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"message\",\n          onChange: e => onTextChange(e),\n          value: state.message,\n          label: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"render-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), renderChat()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"XZ1q5fxaB4QDdAT5XGeqvzEynnk=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/jackson/turing/projects/trivia-app/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","io","TextField","socket","connect","Chat","state","setState","message","name","chat","setChat","on","onTextChange","e","target","value","onMessageSubmit","preventDefault","console","log","emit","renderChat","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,aAAP;AACA,SAAQC,SAAR,QAAwB,mBAAxB;;AAEA,MAAMC,MAAM,GAAGF,EAAE,CAACG,OAAH,CAAW,uBAAX,CAAf;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AAACS,IAAAA,OAAO,EAAE,EAAV;AAAcC,IAAAA,IAAI,EAAE;AAApB,GAAD,CAAlC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACS,EAAP,CAAU,SAAV,EAAqB,CAAC;AAACH,MAAAA,IAAD;AAAOD,MAAAA;AAAP,KAAD,KAAqB;AACxCG,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU;AAAED,QAAAA,IAAF;AAAQD,QAAAA;AAAR,OAAV,CAAD,CAAP;AACD,KAFD;AAGD,GAJQ,CAAT;;AAMA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1BP,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAW,OAACQ,CAAC,CAACC,MAAF,CAASN,IAAV,GAAiBK,CAAC,CAACC,MAAF,CAASC;AAArC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAIH,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAM;AAACT,MAAAA,IAAD;AAAOD,MAAAA;AAAP,QAAkBF,KAAxB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ,EAAkBD,OAAlB;AACAG,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU;AAACD,MAAAA,IAAD;AAAOD,MAAAA;AAAP,KAAV,CAAD,CAAP;AACAL,IAAAA,MAAM,CAACkB,IAAP,CAAY,SAAZ,EAAuB;AAACZ,MAAAA,IAAD;AAAOD,MAAAA;AAAP,KAAvB;AACAD,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA;AAAf,KAAD,CAAR;AACD,GAPD;;AASA,QAAMa,UAAU,GAAG,MAAM;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,WAAOA,IAAI,CAACa,GAAL,CAAS,CAAC;AAACd,MAAAA,IAAD;AAAOD,MAAAA;AAAP,KAAD,EAAkBgB,KAAlB,KAA4B;AAE5CrB,MAAAA,MAAM,CAACkB,IAAP,CAAY,SAAZ,EAAuB;AAACZ,QAAAA,IAAD;AAAOD,QAAAA;AAAP,OAAvB;AACA,0BACI;AAAA,mBAAKC,IAAL,QAAaD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGC,KANM,CAAP;AAOD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAES,eAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,SAAD;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,QAAQ,EAAEH,CAAC,IAAID,YAAY,CAACC,CAAD,CAF3B;AAGA,UAAA,KAAK,EAAER,KAAK,CAACG,IAHb;AAIA,UAAA,KAAK,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AAAA,+BACE,QAAC,SAAD;AACA,UAAA,IAAI,EAAC,SADL;AAEA,UAAA,QAAQ,EAAEK,CAAC,IAAID,YAAY,CAACC,CAAD,CAF3B;AAGA,UAAA,KAAK,EAAER,KAAK,CAACE,OAHb;AAIA,UAAA,KAAK,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqBE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAECc,UAAU,EAFX;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA9DM;;GAAMjB,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client'\nimport './Chat.scss';\nimport {TextField} from '@material-ui/core'\n\nconst socket = io.connect('http://localhost:4000');\n\nexport const Chat = () => {\n  const [state, setState] = useState({message: '', name: ''});\n  const [chat, setChat] = useState([]);\n\n  useEffect(() => {\n    socket.on('message', ({name, message}) => {\n      setChat([...chat, { name, message }])\n    })\n  })\n\n  const onTextChange = (e) => {\n    setState({...state, [e.target.name]: e.target.value})\n  }\n\n  const onMessageSubmit = (e) => {\n    e.preventDefault()\n    const {name, message} = state;\n    console.log(name, message)\n    setChat([...chat, {name, message}])\n    socket.emit('message', {name, message})\n    setState({ message: '', name })\n  }\n\n  const renderChat = () => {\n    console.log(chat)\n    return chat.map(({name, message}, index) => {\n\n    socket.emit('message', {name, message})\n    return (\n        <h3>{name}: {message}</h3>\n    )\n    })\n  }\n\n  return (\n    <div className=\"chat\">\n      <form onSubmit={onMessageSubmit}>\n        <h1>Chat</h1>\n        <div className=\"name-field\">\n          <TextField\n          name=\"name\"\n          onChange={e => onTextChange(e)}\n          value={state.name}\n          label=\"Name\">\n          </TextField>\n        </div>\n        <div>\n          <TextField\n          name=\"message\"\n          onChange={e => onTextChange(e)}\n          value={state.message}\n          label=\"Message\">\n          </TextField>\n        </div>\n        <button>Send Message</button>\n      </form>\n      <div className=\"render-chat\">\n      <h1>Chat Log</h1>\n      {renderChat()}\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}