{"ast":null,"code":"var _jsxFileName = \"/Users/jackson/turing/projects/trivia-app/src/components/QuestionSlide/QuestionSlide.js\";\nimport './QuestionSlide.scss';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionSlide = ({\n  category,\n  incorrectAnswers,\n  correct,\n  question,\n  type\n}) => {\n  const addAnswers = () => {\n    const randomIndex = Math.floor(Math.random() * 4);\n\n    if (!incorrectAnswers.includes(correct)) {\n      incorrectAnswers.splice(randomIndex, 0, correct);\n    }\n\n    return incorrectAnswers.map((answer, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: 'opt' + index + 1,\n          name: \"option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: 'opt' + index + 1,\n          children: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  const answerQuestion = () => {\n    const allOptions = document.querySelectorAll('input[name=option]');\n    console.log(allOptions);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"current-q\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), addAnswers(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => answerQuestion(),\n      children: \"Submit Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = QuestionSlide;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionSlide\");","map":{"version":3,"sources":["/Users/jackson/turing/projects/trivia-app/src/components/QuestionSlide/QuestionSlide.js"],"names":["useState","QuestionSlide","category","incorrectAnswers","correct","question","type","addAnswers","randomIndex","Math","floor","random","includes","splice","map","answer","index","answerQuestion","allOptions","document","querySelectorAll","console","log"],"mappings":";AAAA,OAAO,sBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;AACA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,gBAAX;AAA6BC,EAAAA,OAA7B;AAAsCC,EAAAA,QAAtC;AAAgDC,EAAAA;AAAhD,CAAD,KAA2D;AAEtF,QAAMC,UAAU,GAAG,MAAM;AACvB,UAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAApB;;AACA,QAAI,CAACR,gBAAgB,CAACS,QAAjB,CAA0BR,OAA1B,CAAL,EAAyC;AACvCD,MAAAA,gBAAgB,CAACU,MAAjB,CAAwBL,WAAxB,EAAqC,CAArC,EAAwCJ,OAAxC;AACD;;AACD,WAAOD,gBAAgB,CAACW,GAAjB,CAAqB,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC7C,0BAAO;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACP;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,EAAE,EAAE,QAAQA,KAAR,GAAgB,CAAxC;AAA2C,UAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADO,eAEP;AAAO,UAAA,OAAO,EAAE,QAAQA,KAAR,GAAgB,CAAhC;AAAA,oBAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,gBAFO;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAID,KALM,CAAP;AAOD,GAZD;;AAcA,QAAME,cAAc,GAAG,MAAM;AAC3B,UAAMC,UAAU,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,oBAA1B,CAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACD,GAHD;;AAKA,sBACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA,4BACE;AAAA,gBAAKb;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,UAAU,EAFb,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMU,cAAc,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA5BM;KAAMhB,a","sourcesContent":["import './QuestionSlide.scss'\nimport { useState } from 'react'\nexport const QuestionSlide = ({category, incorrectAnswers, correct, question, type}) => {\n\n  const addAnswers = () => {\n    const randomIndex = Math.floor(Math.random() * 4)\n    if (!incorrectAnswers.includes(correct)) {\n      incorrectAnswers.splice(randomIndex, 0, correct);\n    }\n    return incorrectAnswers.map((answer, index) => {\n      return <div className=\"option\">\n      <input type=\"radio\" id={'opt' + index + 1} name=\"option\"/>\n      <label htmlFor={'opt' + index + 1}>{answer}</label>\n      </div>\n    })\n    \n  }\n\n  const answerQuestion = () => {\n    const allOptions = document.querySelectorAll('input[name=option]')\n    console.log(allOptions)\n  }\n\n  return (\n    <form className=\"current-q\">\n      <h3>{question}</h3>\n      {addAnswers()}\n      <button onClick={() => answerQuestion()}>Submit Answer</button>\n    </form>\n  )\n}"]},"metadata":{},"sourceType":"module"}