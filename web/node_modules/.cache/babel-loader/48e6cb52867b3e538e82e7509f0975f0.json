{"ast":null,"code":"var _jsxFileName = \"/Users/jackson/turing/projects/trivia-app/web/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000', {\n  withCredentials: true,\n  extraHeaders: {\n    \"my-custom-header\": \"abcd\"\n  }\n});\nexport const Chat = () => {\n  _s();\n\n  const [state, setState] = useState({\n    message: '',\n    name: ''\n  });\n  const [chat, setChat] = useState([]);\n  useEffect(() => {\n    socket.on('message', ({\n      name,\n      message\n    }) => {\n      setChat([...chat, name, message]);\n    });\n  });\n\n  const onTextChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onMessageSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      message\n    } = state;\n    socket.emit('message', {\n      name,\n      message\n    });\n    setState({\n      message: '',\n      name\n    });\n  };\n\n  const renderChat = () => {\n    return chat.map(({\n      name,\n      message\n    }, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [name, \": \", message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onMessageSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Messenger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-field\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"name\",\n          onChange: e => onTextChange(e),\n          value: state.name,\n          label: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"message\",\n          onChange: e => onTextChange(e),\n          value: state.message,\n          label: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"render-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), renderChat()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"XZ1q5fxaB4QDdAT5XGeqvzEynnk=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/jackson/turing/projects/trivia-app/web/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","io","TextField","socket","withCredentials","extraHeaders","Chat","state","setState","message","name","chat","setChat","on","onTextChange","e","target","value","onMessageSubmit","preventDefault","emit","renderChat","map","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport io from 'socket.io-client'\nimport TextField from '@material-ui/core/TextField'\n\nconst socket = io('http://localhost:4000', {\n  withCredentials: true,\n  extraHeaders: {\n    \"my-custom-header\": \"abcd\"\n  }\n}\n)\n\nexport const Chat = () => {\n  const [state, setState] = useState({message: '', name: ''})\n  const [chat, setChat] = useState([])\n\n  useEffect(() => {\n    socket.on('message', ({name, message}) => {\n      setChat([...chat, name, message])\n    })\n  })\n\n  const onTextChange = e => {\n    setState({...state, [e.target.name]: e.target.value})\n  }\n\n  const onMessageSubmit = (e) => {\n    e.preventDefault()\n    const {name, message} = state;\n    socket.emit('message', {name, message})\n    setState({message: '', name})\n  }\n\n  const renderChat = () => {\n    return chat.map(({name, message}, index) => {\n      return <div key={index}>\n        <h3>{name}: {message}</h3>\n      </div>\n    })\n  }\n\n  return (\n    <div>\n      <form onSubmit={onMessageSubmit}>\n        <h1>Messenger</h1>\n        <div className=\"name-field\">\n          <TextField name=\"name\" onChange={e => onTextChange(e)} value={state.name} label=\"Name\"/>\n        </div>\n        <div>\n          <TextField name=\"message\" onChange={e => onTextChange(e)} value={state.message} label=\"Message\"/>\n        </div>\n        <button>Send Message</button>\n      </form>\n      <div className=\"render-chat\">\n        <h1>Chat Log</h1>\n        {renderChat()}\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}