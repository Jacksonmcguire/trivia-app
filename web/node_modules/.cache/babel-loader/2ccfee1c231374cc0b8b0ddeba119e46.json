{"ast":null,"code":"var _jsxFileName = \"/Users/jackson/turing/projects/trivia-app/src/components/InGame/InGame.js\";\nimport { QuestionSlide } from '../QuestionSlide/QuestionSlide';\nimport { ScoreBoard } from '../ScoreBoard/ScoreBoard';\nimport { GrPrevious, GrNext } from 'react-icons/gr';\nimport './InGame.scss';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class InGame extends Component {\n  constructor() {\n    super();\n\n    this.questionSlides = () => {\n      const slides = this.props.slides.map(question => {\n        return /*#__PURE__*/_jsxDEV(QuestionSlide, {\n          category: question.category,\n          incorrectAnswers: question.incorrect_answers,\n          correct: question.correct_answer,\n          question: question.question,\n          type: question.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this);\n      });\n      if (slides[0]) this.setState({\n        currentQuestion: slides[0]\n      });\n      return this.state.currentQuestion;\n    };\n\n    this.state = {\n      currentQuestion: {},\n      slides: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      slides: this.props.slides,\n      currentQuestion: this.questionSlides()\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"in-game\",\n      children: [/*#__PURE__*/_jsxDEV(GrPrevious, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GrNext, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jackson/turing/projects/trivia-app/src/components/InGame/InGame.js"],"names":["QuestionSlide","ScoreBoard","GrPrevious","GrNext","Component","InGame","constructor","questionSlides","slides","props","map","question","category","incorrect_answers","correct_answer","type","setState","currentQuestion","state","componentDidMount","render"],"mappings":";AAAA,SAASA,aAAT,QAA8B,gCAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAAQC,UAAR,EAAqBC,MAArB,QAAkC,gBAAlC;AACA,OAAO,eAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;;AACA,OAAO,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AACpCE,EAAAA,WAAW,GAAG;AACZ;;AADY,SAYdC,cAZc,GAYG,MAAM;AACrB,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAX,CAAkBE,GAAlB,CAAsBC,QAAQ,IAAI;AAC/C,4BACE,QAAC,aAAD;AACA,UAAA,QAAQ,EAAEA,QAAQ,CAACC,QADnB;AAEA,UAAA,gBAAgB,EAAED,QAAQ,CAACE,iBAF3B;AAGA,UAAA,OAAO,EAAEF,QAAQ,CAACG,cAHlB;AAIA,UAAA,QAAQ,EAAEH,QAAQ,CAACA,QAJnB;AAKA,UAAA,IAAI,EAAEA,QAAQ,CAACI;AALf;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVc,CAAf;AAWA,UAAIP,MAAM,CAAC,CAAD,CAAV,EAAe,KAAKQ,QAAL,CAAc;AAACC,QAAAA,eAAe,EAAET,MAAM,CAAC,CAAD;AAAxB,OAAd;AAA6C,aAAO,KAAKU,KAAL,CAAWD,eAAlB;AAC7D,KAzBa;;AAEZ,SAAKC,KAAL,GAAa;AACXD,MAAAA,eAAe,EAAE,EADN;AAEXT,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAEDW,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,QAAL,CAAc;AAACR,MAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWD,MAApB;AAA4BS,MAAAA,eAAe,EAAE,KAAKV,cAAL;AAA7C,KAAd;AACD;;AAiBDa,EAAAA,MAAM,GAAI;AACR,wBACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AApCmC","sourcesContent":["import { QuestionSlide } from '../QuestionSlide/QuestionSlide'\nimport { ScoreBoard } from '../ScoreBoard/ScoreBoard'\nimport {GrPrevious , GrNext} from 'react-icons/gr'\nimport './InGame.scss'\nimport { Component } from 'react'\nexport class InGame extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentQuestion: {},\n      slides: [],\n    }\n  }\n  \n  componentDidMount() {\n    this.setState({slides: this.props.slides, currentQuestion: this.questionSlides()})\n  }\n\n  questionSlides = () => {\n    const slides = this.props.slides.map(question => {\n      return (\n        <QuestionSlide\n        category={question.category}\n        incorrectAnswers={question.incorrect_answers}\n        correct={question.correct_answer}\n        question={question.question}\n        type={question.type}\n        />\n      )\n    })\n    if (slides[0]) this.setState({currentQuestion: slides[0]}); return this.state.currentQuestion\n  }\n\n  render () {\n    return (\n      <main className=\"in-game\">\n        <GrPrevious/>\n        <GrNext/>\n        <ScoreBoard/>\n      </main>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}