{"ast":null,"code":"var _jsxFileName = \"/Users/jackson/turing/projects/trivia-app/src/components/NewGameForm/NewGameForm.js\";\nimport './NewGameForm.scss';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class NewGameForm extends React.Component {\n  constructor() {\n    super();\n\n    this.categoryOptions = () => {\n      return this.props.categories.map((category, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: category.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 14\n        }, this);\n      });\n    };\n\n    this.handleChange = e => {\n      if (e.target.name !== 'type') {\n        this.setState({ ...this.state,\n          [e.target.name]: e.target.value\n        });\n      } else this.setState({ ...this.state,\n        [e.target.name]: e.target.id\n      });\n\n      console.log(e.target);\n    };\n\n    this.state = {\n      difficulty: '',\n      category: '',\n      number: '',\n      type: '',\n      room: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"new-game\",\n      onChange: e => this.handleChange(e),\n      children: [\"New Game\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"difficulty\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Easy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Hard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"category\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), this.categoryOptions()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"number\",\n        placeholder: \"Number of Slides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"type\",\n          id: \"boolean\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"boolean\",\n          children: \"True / False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"type\",\n          id: \"multiple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"multiple\",\n          children: \"Multiple Choice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"room\",\n        placeholder: \"Room Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/play\",\n        onClick: () => this.fetchTriviaSet(),\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jackson/turing/projects/trivia-app/src/components/NewGameForm/NewGameForm.js"],"names":["React","Link","NewGameForm","Component","constructor","categoryOptions","props","categories","map","category","index","name","handleChange","e","target","setState","state","value","id","console","log","difficulty","number","type","room","render","fetchTriviaSet"],"mappings":"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","sourcesContent":["import './NewGameForm.scss'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nexport class NewGameForm extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      difficulty: '',\n      category: '',\n      number: '',\n      type: '',\n      room: '',\n    }\n  }\n\n  categoryOptions = () => {\n    return this.props.categories.map((category, index) => {\n      return <option key={index}>{category.name}</option>\n    })\n  }\n\n  handleChange = (e) => {\n    if (e.target.name !== 'type') {\n      this.setState({...this.state, [e.target.name]: e.target.value})\n    } else this.setState({...this.state, [e.target.name]: e.target.id})\n    console.log(e.target)\n  } \n\n  render () {\n    return (\n    <form className=\"new-game\"\n    onChange={(e) => this.handleChange(e)}>New Game\n      <select name=\"difficulty\">\n        <option>Difficulty</option>\n        <option>Easy</option>\n        <option>Medium</option>\n        <option>Hard</option>\n      </select>\n      <select name=\"category\">\n        <option>Category</option>\n        {this.categoryOptions()}\n      </select>\n      <input type=\"number\" name=\"number\" placeholder=\"Number of Slides\"/>\n      <div>\n      <input type=\"radio\" name=\"type\" id=\"boolean\"/>\n      <label htmlFor=\"boolean\">True / False</label>\n      <input type=\"radio\" name=\"type\" id=\"multiple\"/>\n      <label htmlFor=\"multiple\">Multiple Choice</label>\n      </div>\n      <input name=\"room\" placeholder=\"Room Name\"/>\n      <Link to=\"/play\" onClick={() => this.fetchTriviaSet()}>\n      <button>Start</button>\n      </Link>\n    </form>\n  )\n  }\n}"]},"metadata":{},"sourceType":"module"}