{"ast":null,"code":"var _jsxFileName = \"/Users/jackson/turing/projects/trivia-app/src/components/InGame/InGame.js\";\nimport { QuestionSlide } from '../QuestionSlide/QuestionSlide';\nimport { ScoreBoard } from '../ScoreBoard/ScoreBoard';\nimport { GrPrevious, GrNext } from 'react-icons/gr';\nimport './InGame.scss';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class InGame extends Component {\n  constructor() {\n    super();\n\n    this.questionSlides = () => {\n      if (this.props.slides.length) {\n        const slides = this.props.slides.map(question => {\n          console.log(question);\n          return /*#__PURE__*/_jsxDEV(QuestionSlide, {\n            category: question.category,\n            incorrectAnswers: question.incorrect_answers,\n            correct: question.correct_answer,\n            question: question.question,\n            type: question.type,\n            evaluateAnswer: this.evaluateAnswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }, this);\n        });\n        return slides[this.state.currentQuestion];\n      } else return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sorry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this);\n    };\n\n    this.evaluateAnswer = (correct, answer) => {\n      if (answer === correct) {\n        this.setState({ ...this.state,\n          score: this.state.score + 1,\n          currentQuestion: this.state.currentQuestion + 1\n        });\n      } else this.setState({ ...this.state,\n        incorrectAnswers: [...this.state.incorrectAnswers, answer],\n        currentQuestion: this.state.currentQuestion + 1\n      });\n    };\n\n    this.state = {\n      currentQuestion: 0,\n      slides: [],\n      score: 0,\n      incorrectAnswers: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"in-game\",\n      children: [/*#__PURE__*/_jsxDEV(GrPrevious, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), this.questionSlides(), /*#__PURE__*/_jsxDEV(GrNext, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jackson/turing/projects/trivia-app/src/components/InGame/InGame.js"],"names":["QuestionSlide","ScoreBoard","GrPrevious","GrNext","Component","InGame","constructor","questionSlides","props","slides","length","map","question","console","log","category","incorrect_answers","correct_answer","type","evaluateAnswer","state","currentQuestion","correct","answer","setState","score","incorrectAnswers","render"],"mappings":";AAAA,SAASA,aAAT,QAA8B,gCAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAAQC,UAAR,EAAqBC,MAArB,QAAkC,gBAAlC;AACA,OAAO,eAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;;AACA,OAAO,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AACpCE,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWdC,cAXc,GAWG,MAAM;AACrB,UAAI,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,MAAtB,EAA8B;AAC5B,cAAMD,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAX,CAAkBE,GAAlB,CAAsBC,QAAQ,IAAI;AAC/CC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,8BACE,QAAC,aAAD;AACA,YAAA,QAAQ,EAAEA,QAAQ,CAACG,QADnB;AAEA,YAAA,gBAAgB,EAAEH,QAAQ,CAACI,iBAF3B;AAGA,YAAA,OAAO,EAAEJ,QAAQ,CAACK,cAHlB;AAIA,YAAA,QAAQ,EAAEL,QAAQ,CAACA,QAJnB;AAKA,YAAA,IAAI,EAAEA,QAAQ,CAACM,IALf;AAMA,YAAA,cAAc,EAAE,KAAKC;AANrB;AAAA;AAAA;AAAA;AAAA,kBADF;AAUC,SAZY,CAAf;AAaA,eAAOV,MAAM,CAAC,KAAKW,KAAL,CAAWC,eAAZ,CAAb;AACC,OAfH,MAeS,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACV,KA5Ba;;AAAA,SA8BdF,cA9Bc,GA8BG,CAACG,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAIA,MAAM,KAAKD,OAAf,EAAwB;AACtB,aAAKE,QAAL,CAAc,EAAC,GAAG,KAAKJ,KAAT;AAAgBK,UAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK,KAAX,GAAmB,CAA1C;AAA6CJ,UAAAA,eAAe,EAAE,KAAKD,KAAL,CAAWC,eAAX,GAA6B;AAA3F,SAAd;AACD,OAFD,MAEO,KAAKG,QAAL,CAAc,EAAC,GAAG,KAAKJ,KAAT;AAAgBM,QAAAA,gBAAgB,EAAE,CAAC,GAAG,KAAKN,KAAL,CAAWM,gBAAf,EAAiCH,MAAjC,CAAlC;AAA4EF,QAAAA,eAAe,EAAE,KAAKD,KAAL,CAAWC,eAAX,GAA6B;AAA1H,OAAd;AAER,KAnCa;;AAEZ,SAAKD,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE,CADN;AAEXZ,MAAAA,MAAM,EAAE,EAFG;AAGXgB,MAAAA,KAAK,EAAE,CAHI;AAIXC,MAAAA,gBAAgB,EAAE;AAJP,KAAb;AAMD;;AA6BGC,EAAAA,MAAM,GAAI;AACZ,wBACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKpB,cAAL,EAFH,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA/CmC","sourcesContent":["import { QuestionSlide } from '../QuestionSlide/QuestionSlide'\nimport { ScoreBoard } from '../ScoreBoard/ScoreBoard'\nimport {GrPrevious , GrNext} from 'react-icons/gr'\nimport './InGame.scss'\nimport { Component } from 'react'\nexport class InGame extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentQuestion: 0,\n      slides: [],\n      score: 0,\n      incorrectAnswers: [],\n    }\n  }\n  \n\n  questionSlides = () => {\n    if (this.props.slides.length) {\n      const slides = this.props.slides.map(question => {\n        console.log(question)\n        return (\n          <QuestionSlide\n          category={question.category}\n          incorrectAnswers={question.incorrect_answers}\n          correct={question.correct_answer}\n          question={question.question}\n          type={question.type}\n          evaluateAnswer={this.evaluateAnswer}\n          />\n          )\n        })\n      return slides[this.state.currentQuestion]\n      } else return <div>sorry</div>\n  }\n\n  evaluateAnswer = (correct, answer) => {\n    if (answer === correct) {\n      this.setState({...this.state, score: this.state.score + 1, currentQuestion: this.state.currentQuestion + 1})\n    } else this.setState({...this.state, incorrectAnswers: [...this.state.incorrectAnswers, answer], currentQuestion: this.state.currentQuestion + 1})\n\n  }\n      \n      render () {\n    return (\n      <main className=\"in-game\">\n        <GrPrevious/>\n        {this.questionSlides()}\n        <GrNext/>\n        <ScoreBoard/>\n      </main>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}